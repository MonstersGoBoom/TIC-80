language: c

git:
  depth: false
  
before_install:
  - BUILDS_SERVER_PATH=${BUILD_SERVER}/files/$TRAVIS_BRANCH/$(date +%Y.%m.%d)/$OS_FOLDER
script:
  - mkdir out && cd out
  - cmake -DCMAKE_BUILD_TYPE=MinSizeRel ..
  - make -j$(nproc)

matrix:
  include:
    - os: osx
      osx_image: xcode9.3
      env:
        - OS_FOLDER=mac
      install:
        - brew uninstall --ignore-dependencies libidn2
      after_success:
        - cpack
        - cp *.dmg tic80.dmg
        - sha256sum tic80.dmg
        - curl --retry 3 --ftp-create-dirs -T tic80.dmg $BUILDS_SERVER_PATH/

    - os: linux
      dist: trusty
      addons:
        apt:
          packages:
            - libgtk-3-dev
            - libasound2-dev
      env:
        - OS_FOLDER=linux
      after_success:
        - tar -cvzf tic80.tar.gz --directory=$HOME/build/nesbox/TIC-80/out/bin tic80
        - sha256sum tic80.tar.gz
        - curl --retry 3 --ftp-create-dirs -T tic80.tar.gz $BUILDS_SERVER_PATH/

    - os: linux
      language: android
      env:
        - OS_FOLDER=android
      install:
        - wget https://dl.google.com/android/repository/android-ndk-r18b-linux-x86_64.zip
        - unzip android-ndk-r18b-linux-x86_64.zip -d $HOME
        - export ANDROID_NDK_HOME=$HOME/android-ndk-r18b
        - touch $HOME/.android/repositories.cfg
        - yes | sdkmanager "platforms;android-26"
        - yes | sdkmanager "build-tools;28.0.3"

      script:
        - cd build/android
        - ./gradlew assembleRelease

      after_success:
        - cp app/build/outputs/apk/arm7/release/app-arm7-release.apk tic80_arm7.apk
        - cp app/build/outputs/apk/arm8/release/app-arm8-release.apk tic80_arm8.apk
        - cp app/build/outputs/apk/x86_64/release/app-x86_64-release.apk tic80_x86_64.apk
        - cp app/build/outputs/apk/x86/release/app-x86-release.apk tic80_x86.apk
        - sha256sum tic80_arm7.apk
        - sha256sum tic80_arm8.apk
        - sha256sum tic80_x86_64.apk
        - sha256sum tic80_x86.apk
        - curl --retry 3 --ftp-create-dirs -T tic80_arm7.apk $BUILDS_SERVER_PATH/
        - curl --retry 3 --ftp-create-dirs -T tic80_arm8.apk $BUILDS_SERVER_PATH/
        - curl --retry 3 --ftp-create-dirs -T tic80_x86_64.apk $BUILDS_SERVER_PATH/
        - curl --retry 3 --ftp-create-dirs -T tic80_x86.apk $BUILDS_SERVER_PATH/

    - os: linux
      dist: trusty
      env:
        - OS_FOLDER=wasm
      services:
        - docker
      install:
        - sudo apt-get install zip
        - docker run -dit --name emscripten -v $(pwd):/src emscripten/emsdk bash
      script:
        - docker exec -it emscripten emcmake cmake -DCMAKE_BUILD_TYPE=MinSizeRel .
        - docker exec -it emscripten make -j$(nproc)
      after_success:
        - cd $HOME/build/nesbox/TIC-80
        - mkdir out
        - cp build/html/index.html out/index.html
        - cp bin/tic80.wasm out/tic80.wasm
        - cp bin/tic80.js out/tic80.js
        - cd out
        - zip tic80-wasm.zip *
        - sha256sum tic80-wasm.zip
        - curl --retry 3 --ftp-create-dirs -T tic80-wasm.zip $BUILDS_SERVER_PATH/
